version: '3.8'

x-function: &base_web
  working_dir: /opt/backend
  depends_on:
    - db
    - redis
  networks:
    - nginx_network
  env_file:
    - .env

services:

  nginx:
    build: ./nginx
    container_name: ${PROJECT_SLUG}_nginx
    volumes:
      - static_dir:/opt/backend/static/
      - media_dir:/opt/backend/media/
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - nginx_network

  web:
    <<: *base_web
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    container_name: ${PROJECT_SLUG}_app
    volumes:
      - static_dir:/opt/backend/static/
      - media_dir:/opt/backend/media/
      - ./backend:/opt/backend:rw

  celery:
    <<: *base_web
    build:
      context: ./backend
      dockerfile: celery.dockerfile
    container_name: ${PROJECT_SLUG}_celery
    volumes:
      - ./backend/:/opt/backend/:rw

  frontend:
    build:
      context: ./frontend
      dockerfile: frontend.dockerfile
    container_name: ${PROJECT_SLUG}_frontend
    ports:
      - "3000:3000"
    env_file:
      - .env
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      nginx_network:

  db:
    image: postgres:latest
    container_name: ${PROJECT_SLUG}_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - nginx_network

  redis:
    image: redis:latest
    container_name: ${PROJECT_SLUG}_redis
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - nginx_network

volumes:
  static_dir:
  media_dir:
  pgdata:
  redis_data:

networks:
  nginx_network:
